tailwind intelisense -> 확장프로그램 설치(자동완성)
modifier -> 
peer modifier -> input의 상태에 따라서 span의 스타일을 변화시킬 수 있다.

HTML - <detail> -> 아코디언 기능 만들 수 있음.
  <summary>What is my fav. food</summary>
  <div>김치</div>
</detail>

보통 디자인을 할 때 Desktop -> 모바일로 하는데, tailwind는 디폴트로 모바일 -> Desktop으로 하게끔 디자인 방식을 바꿔버렸다.
modifier - bg-white-400 sm:bg-gray-400 md:bg-yellow-400 lg:bg-red-400 ... 이 modifier는 from의 개념으로 생각하면 됨. 

다크모드를 지원할 경우 -> tailwind.config.js의 darkMode의 디폴트(사용저 브라우저 환경에 맡김)는 media, 수동으로 하겠다-> class(변경하고자 하는 곳의 부모의 className에 dark를 삽입.)

tailwind 3.0 이전 -> 겁나 큰 파일
이후 -> Just In Time 컴파일러 (실시간으로 코드를 감시하면서 그때그때 필요한 클래스를 생성.)
text-[93432px] (만약 tailwind에 원하는 사이즈가 없다? 대괄호로 변수처럼 사용) 3.0이전에는 style={{}}을 따로 만들어서 정의했음.

배경화면 쓸 때, bg-[url('/vercel.svg')] 이런 식으로 가능

아이콘: svg파일 -> https://heroicons.dev

Prisma 란?
ORM(Object Relational mapping)의 일종.
SQL의 데이터조작 로직을 JS 객체 느낌으로 다룰수있게 도와준다.

foreign key -> 다른 db의 key의 주소를 바라보고 있음.
ex) Users DB: id: 1 username: SJ
Comments DB: id:1 text:wow! user:(Users DB: 1) => (Users DB: 1)는? id: 1 username: SJ 이거 전체를 가리킴.

npx prisma studio -> 프리즈마 스튜디오를 열게 해줌. (나의 경우 5555 포트가 사용되고 있어서 에러가 났는데, cmd에서 netstat -ano | findstr 포트번호 입력해서 PID값을 찾고, 작업관리자>서비스에서 해당 PID를 kill하고 돌리니 해결되었다.)
npx prisma db push -> .env에 있는 db 주소로 내가 만든 Model을 테이블로 만들어줌. (Serverless Db를 Supabase로 가져갔고. 보안상 로컬용으로 도커를 이용해서 로컬 supabase를 켜고(npx supabase start) 이를 이용.)
npx prisma generate -> prisma/schema.prisma에 있는 Model을 바탕으로 node_modules/@prisma/client/index.d.ts에 해당 Model의 타입을 직접 작성해줌.

-- api Route
pages폴더 내부에 api라는 폴더를 생성(혹은 그냥 있거나). 그 안에서 백엔드에서 작업할 수 있는 것들을 할 수 있음.
ex) localhost:3000/api/client-test 하면 res.json({test: 'test'}) 이런식으로 보낸걸 확인할 수 있음.